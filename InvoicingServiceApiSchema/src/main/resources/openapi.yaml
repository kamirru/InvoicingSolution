openapi: 3.0.1
info:
  title: Bookstore API
  description: API for managing a collection of books.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
paths:
  /books:
    get:
      summary: Retrieve all books
      operationId: getBooks
      tags:
        - books
      responses:
        '200':
          description: A list of books.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './components.yaml/#/components/schemas/Book'
    post:
      summary: Add a new book
      operationId: addBook
      tags:
        - books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components.yaml/#/components/schemas/Book'
      responses:
        '201':
          description: Book created successfully.
          content:
            application/json:
              schema:
                $ref: './components.yaml/#/components/schemas/Book'

  /books/{bookId}:
    get:
      summary: Retrieve a specific book by ID
      operationId: getBookById
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The ID of the book to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: A single book.
          content:
            application/json:
              schema:
                $ref: './components.yaml/#/components/schemas/Book'
        '404':
          description: Book not found.

    put:
      summary: Update a book
      operationId: updateBook
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The ID of the book to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './components.yaml/#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully.
          content:
            application/json:
              schema:
                $ref: './components.yaml/#/components/schemas/Book'
        '404':
          description: Book not found.

    delete:
      summary: Delete a book
      operationId: deleteBook
      tags:
        - books
      parameters:
        - name: bookId
          in: path
          required: true
          description: The ID of the book to delete.
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully.
        '404':
          description: Book not found.
